class UDSClient:
    def __init__(self, config):
        # ... existing initialization code ...
        pass

    def send_seed_with_retry(self, seed_hex, udp_ip, udp_port):
        MAX_RETRIES = 3
        TIMEOUT = 5  # seconds
        attempt = 0
        sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
        sock.settimeout(TIMEOUT)
        try:
            while attempt < MAX_RETRIES:
                try:
                    sock.sendto(seed_hex.encode(), (udp_ip, udp_port))
                    logging.info(f"Attempt {attempt + 1}: Seed sent to {udp_ip}:{udp_port}")
                    key, _ = sock.recvfrom(1024)
                    logging.info(f"Received Key: {key}")
                    return key
                except socket.timeout:
                    logging.warning(f"Attempt {attempt + 1}: Timeout waiting for key from PC")
                    attempt += 1
                    time.sleep(1)  # Optional: wait before retrying
                except Exception as e:
                    logging.error(f"Attempt {attempt + 1}: Exception occurred - {e}")
                    attempt += 1
                    time.sleep(1)  # Optional: wait before retrying
            raise Exception("Failed to receive key after multiple attempts")
        finally:
            sock.close()
